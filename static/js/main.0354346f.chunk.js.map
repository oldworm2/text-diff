{"version":3,"sources":["components/Diff2HtmlView.js","components/DiffInputForm.js","containers/TextDiffView.js","App.js","serviceWorker.js","index.js"],"names":["Diff2HtmlView","props","react_default","a","createElement","Grid_default","style","padding","direction","justify","alignItems","container","xs","item","dangerouslySetInnerHTML","__html","outputHtml","DiffInputForm","marginTop","marginLeft","marginRight","RadioGroup_default","display","aria-label","name","value","viewMode","onChange","viewModeChanged","FormControlLabel_default","control","Radio_default","color","label","labelPlacement","spacing","TextField_default","id","multiline","rows","fullWidth","margin","variant","e","textAChanged","onDrop","dropFileA","textA","textBChanged","dropFileB","textB","Button_default","onClick","compare","size","Compare_default","TextDiffView","state","event","_this2","this","setState","target","_this3","preventDefault","file","dataTransfer","files","reader","FileReader","readAsText","onload","evt","result","_this4","strInput","jsdiff","Diff2Html","getPrettyHtml","inputFormat","matching","outputFormat","components_DiffInputForm","bind","components_Diff2HtmlView","Component","theme","createMuiTheme","palette","primary","purple","secondary","pink","App","styles","AppBar_default","position","Toolbar_default","Typography_default","containers_TextDiffView","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0354346f.chunk.js","sourcesContent":["import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst Diff2HtmlView = (props) => {\r\n\r\n  return ( \r\n    <Grid \r\n    style={{padding: 15}}\r\n    direction=\"row\"\r\n    justify=\"center\"\r\n    alignItems=\"center\"\r\n    container>\r\n\r\n      <Grid xs={12} item>\r\n        <div dangerouslySetInnerHTML={{__html:props.outputHtml}}></div>\r\n      </Grid>\r\n\r\n    </Grid>\r\n  );\r\n  \r\n}\r\n\r\nexport default Diff2HtmlView;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Compare from '@material-ui/icons/Compare';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\n\r\nconst DiffInputForm = (props) => {\r\n\r\n  return ( \r\n    <Grid container style={{marginTop:15}}>\r\n      <Grid xs={12} style={{marginLeft:15, marginRight:15}} item>\r\n        <RadioGroup\r\n          style={{display: 'inline'}}\r\n          aria-label=\"view-mode\"\r\n          name=\"view-mode\"\r\n          value={props.viewMode}\r\n          onChange={props.viewModeChanged}\r\n        >\r\n          <FormControlLabel\r\n            \r\n            value=\"line-by-line\"\r\n            control={<Radio color=\"primary\" />}\r\n            label=\"line-by-line\"\r\n            labelPlacement=\"end\"\r\n          />\r\n          <FormControlLabel\r\n            value=\"side-by-side\"\r\n            control={<Radio color=\"primary\" />}\r\n            label=\"side-by-side\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </RadioGroup>\r\n      </Grid>\r\n      <Grid xs={12} style={{marginLeft:15, marginRight:15}} item>\r\n        <Grid \r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={24}\r\n          container>\r\n\r\n            <Grid xs={6} item>\r\n              <TextField\r\n                id=\"textA\"\r\n                label=\"Input Original text\"\r\n                multiline\r\n                rows={10}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                onChange={(e) => props.textAChanged(e)}\r\n                onDrop={(e) => props.dropFileA(e)}\r\n                value={props.textA}\r\n              />\r\n            </Grid>\r\n            <Grid xs={6} item>\r\n              <TextField\r\n                id=\"textB\"\r\n                label=\"Input Changed text\"\r\n                multiline\r\n                rows={10}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                onChange={(e) => props.textBChanged(e)}\r\n                onDrop={(e) => props.dropFileB(e)}\r\n                value={props.textB}\r\n              />\r\n            </Grid>\r\n            \r\n\r\n          </Grid>\r\n\r\n          <Grid \r\n          style={{marginTop:15}}\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          container>\r\n\r\n            <Grid item>\r\n              <Button onClick={() => props.compare()} variant=\"contained\" size=\"small\" color=\"primary\">\r\n                comppare\r\n                <Compare   color=\"secondary\" style={{ marginLeft: 10 }} />\r\n              </Button>\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n  \r\n}\r\n\r\nexport default DiffInputForm;","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Diff2HtmlView from \"../components/Diff2HtmlView\";\r\nimport \"../../node_modules/diff2html/dist/diff2html.css\";\r\nimport { Diff2Html } from \"diff2html\";\r\nimport * as jsdiff from \"diff\";\r\nimport DiffInputForm from \"../components/DiffInputForm\";\r\n\r\nclass TextDiffView extends Component {\r\n  state = {\r\n    textA: \"\",\r\n    textB: \"\",\r\n    outputHtml: \"\",\r\n    viewMode: \"line-by-line\"\r\n  };\r\n\r\n  viewModeChanged(event) {\r\n    this.state.outputHtml\r\n      ? this.setState({ viewMode: event.target.value }, () => this.compare())\r\n      : this.setState({\r\n          viewMode: event.target.value\r\n        });\r\n  }\r\n\r\n  textAChanged(event) {\r\n    this.setState({\r\n      textA: event.target.value\r\n    });\r\n  }\r\n\r\n  textBChanged(event) {\r\n    this.setState({\r\n      textB: event.target.value\r\n    });\r\n  }\r\n\r\n  dropFileA(event) {\r\n    event.preventDefault();\r\n\r\n    let files = event.dataTransfer.files;\r\n\r\n    let file = files[0];\r\n\r\n    if (file) {\r\n      var reader = new FileReader();\r\n      reader.readAsText(file, \"UTF-8\");\r\n      reader.onload = evt => {\r\n        this.setState({\r\n          textA: evt.target.result\r\n        });\r\n      };\r\n    }\r\n  }\r\n\r\n  dropFileB(event) {\r\n    event.preventDefault();\r\n    let files = event.dataTransfer.files;\r\n\r\n    let file = files[0];\r\n\r\n    if (file) {\r\n      var reader = new FileReader();\r\n      reader.readAsText(file, \"UTF-8\");\r\n      reader.onload = evt => {\r\n        this.setState({\r\n          textB: evt.target.result\r\n        });\r\n      };\r\n    }\r\n  }\r\n\r\n  compare() {\r\n    let strInput = jsdiff.createPatch(\r\n      \"diff\",\r\n      this.state.textA,\r\n      this.state.textB\r\n    );\r\n    let outputHtml = Diff2Html.getPrettyHtml(strInput, {\r\n      inputFormat: \"diff\",\r\n      matching: \"lines\",\r\n      outputFormat: this.state.viewMode\r\n    });\r\n    this.setState({\r\n      outputHtml: outputHtml\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid container>\r\n        <Grid xs={12} item>\r\n          <DiffInputForm\r\n            textA={this.state.textA}\r\n            textB={this.state.textB}\r\n            viewMode={this.state.viewMode}\r\n            viewModeChanged={this.viewModeChanged.bind(this)}\r\n            textAChanged={this.textAChanged.bind(this)}\r\n            textBChanged={this.textBChanged.bind(this)}\r\n            dropFileA={this.dropFileA.bind(this)}\r\n            dropFileB={this.dropFileB.bind(this)}\r\n            compare={this.compare.bind(this)}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid xs={12} item>\r\n          <Diff2HtmlView outputHtml={this.state.outputHtml} />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextDiffView;\r\n","import React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport pink from '@material-ui/core/colors/pink';\nimport TextDiffView from './containers/TextDiffView';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: purple,\n    secondary: pink,\n  },\n});\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        <MuiThemeProvider theme={theme}>\n          <AppBar position=\"static\" color=\"primary\">\n            <Toolbar>\n              <Typography variant=\"h6\" color=\"inherit\">\n                Text Diff View\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          \n          <TextDiffView />\n\n        </MuiThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}